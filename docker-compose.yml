version: '3'
services:
  # MySQL service
  mysql:
    env_file:
      - .env
    image: 'mysql/mysql-server:8.0'
    ports:
      - '${DB_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    command:
      [
        --default-authentication-plugin=mysql_native_password,
        --sql-mode=
      ]
    volumes:
      - 'pythonflask-mysql:/var/lib/mysql'
      - './.config/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
      - './.config/backup:/backup'
    networks:
      - pythonflask-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
      retries: 3
      timeout: 5s

  # Flask application service
  web:
    env_file:
      - .env
    build: .
    ports:
      - "${APP_PORT:-5000}:5000"
    depends_on:
      - mysql  # Wait for the MySQL service to be ready before starting the Flask app
    volumes:
      - .:/app
    environment:
      DATABASE_URL: mysql+pymysql://${DB_USERNAME}:${DB_PASSWORD}@mysql:${DB_PORT}/${DB_DATABASE}  # Update with your database details


networks:
  pythonflask-network:
    driver: bridge

volumes:
  pythonflask-mysql:
    driver: local
